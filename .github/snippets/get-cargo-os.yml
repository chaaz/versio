key: get-cargo-os
value:
  - name: Install Ubuntu dependencies
    if: matrix.os == 'ubuntu-latest'
    run: sudo apt-get update && sudo apt-get install -y libgpg-error-dev libgpgme-dev
  - name: Install MacOS dependencies
    if: matrix.os == 'macos-latest'
    run: brew update; brew install gpgme
  - name: Install Windows dependencies
    if: matrix.os == 'windows-latest'
    # see https://github.com/actions/virtual-environments/issues/2876
    env:
      RUNNER_TEMP: ${{ runner.temp }}
    run: |
      curl -L https://gnupg.org/ftp/gcrypt/binary/gnupg-w32-2.3.1_20210420.exe -o "$env:RUNNER_TEMP/gnupg.exe"
      $env:PATH += ";$env:RUNNER_TEMP"
      gnupg.exe /S
      echo "C:\Program Files (x86)\GnuPG\bin" >> $env:GITHUB_PATH
  - name: Get cargo stable
    if: matrix.os != 'windows-latest'
    uses: actions-rs/toolchain@v1
    with:
      toolchain: stable
      components: clippy
  - name: Get cargo nightly
    if: matrix.os != 'windows-latest'
    uses: actions-rs/toolchain@v1
    with:
      toolchain: nightly
      components: rustfmt
  - name: Get Windows cargo stable
    # Windows uses gpg4win, which only has a 32-bit version
    if: matrix.os == 'windows-latest'
    uses: actions-rs/toolchain@v1
    with:
      toolchain: stable-i686-pc-windows-gnu
      target: i686-pc-windows-gnu
      components: clippy
      default: true
  - name: Get Windows cargo nightly
    if: matrix.os == 'windows-latest'
    uses: actions-rs/toolchain@v1
    with:
      toolchain: nightly-i686-pc-windows-gnu
      target: i686-pc-windows-gnu
      components: rustfmt
  - name: Update Windows target configuration
    if: matrix.os == 'windows-latest'
    run: rustup set default-host i686-pc-windows-gnu
  - name: Find paths
    id: cargo-find-paths
    run: 'echo ::set-output name=cargo-lock-glob::"${{ matrix.root }}"/**/Cargo.lock'
  - name: Cache cargo and target
    uses: actions/cache@v1
    with:
      path: |
        ~/.cargo/registry
        ~/.cargo/git
        ${{ matrix.root }}/target
      key: ${{ runner.os }}-cargo-${{ hashFiles(steps.cargo-find-paths.outputs.cargo-lock-glob) }}
