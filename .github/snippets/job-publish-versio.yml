key: job-publish-versio
value:
  needs: github-publish
  strategy:
    matrix:
      include:
        - os: ubuntu-latest
          target: 'x86_64-unknown-linux-gnu'
          root: '.'
          rustflags: '-D warnings -C link-args=-s'
          bin_name: 'versio'
        - os: macos-latest
          target: 'x86_64-apple-darwin'
          root: '.'
          rustflags: '-D warnings'
          bin_name: 'versio'
        - os: windows-latest
          target: 'x86_64-pc-win32.exe'
          root: '.'
          rustflags: '-D warnings'
          bin_name: 'versio.exe'
  if: SNIPPET_not-skip-ci
  runs-on: ${{ matrix.os }}
  steps:
    - name: Checkout release
      uses: actions/checkout@v2
      with:
        ref: main
    - SNIPPET_get-cargo-os
    - name: Examine GnuPG include
      run: ls 'C:\Program Files (x86)\gnupg\include'
    - name: Build binary
      run: cargo build --release
      working-directory: ${{ matrix.root }}
      env:
        RUSTFLAGS: ${{ matrix.rustflags }}
    - name: Upload binary
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ needs.github-publish.outputs.upload_url }}
        asset_path: target/release/${{ matrix.bin_name }}
        asset_name: versio__${{ matrix.target }}
        asset_content_type: application/octet-stream
